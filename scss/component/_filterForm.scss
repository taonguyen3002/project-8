@use "../abstracts";
// ///////////////////////////////////////////////////////////////////////
.filter__wrap {
  position: relative;
}
.filter {
  position: absolute;
  right: 0;
  top: 57px;
  z-index: 2;
  padding: 30px 0;
  background: var(--filter-bg);
  filter: drop-shadow(0px 40px 90px var(--filter-form-shadow));
  border-radius: 15px;
  transition: opacity, visibility;
  transition-duration: 0.5s;
  @include abstracts.screen(md) {
    padding: 20px 0;
    z-index: 100;
  }
  @include abstracts.screen(sm) {
    position: fixed;
    width: 100vw;
    height: 100vh;
    inset: 0;
    border-radius: 0;
  }
  &__heading {
    font-weight: 500;
    line-height: 145.455%;
    font-size: 2.2rem;
  }
  &__row {
    display: flex;
  }
  &__separate {
    width: 1px;
    background: #eee;
    margin: 0 30px;
    @include abstracts.screen(xl) {
      width: 100%;
      height: 1px;
      margin: 15px 0;
    }
  }
  &__footer {
    margin-top: 32px;
    justify-content: flex-end;
  }
  &__cancel,
  &__search {
    height: 38px;
    padding: 0 10px;
  }
  &__cancel {
    font-size: 1.5rem;
  }
  &__search {
    font-size: 1.4rem;
  }
  &__icon-arrow {
    position: absolute;
    top: -20px;
    right: 24px;
    width: 48.5px;
  }
  &__content {
    @include abstracts.screen(xl) {
      flex-direction: column;
      height: calc(100vh - 260px);
      overflow-y: auto;
    }
  }
  &__heading,
  &__content,
  &__footer {
    padding: 0 30px;
  }
  // turn on and turn off filter
  &.hide {
    opacity: 0;
    visibility: hidden;
  }
}
.filter__form {
  margin-top: 30px;
  &-group {
    margin-top: 20px;
    &--inline {
      display: flex;
      gap: 30px;
    }
  }
  &-slider {
    position: relative;
    width: 100%;
    height: 2px;
    background: #d2d1d6;
    &::after,
    &::before {
      content: "";
      position: absolute;
      width: 22px;
      height: 22px;
      border: 6px solid #ffb700;
      background: var(--filter-bg);
      top: 50%;
      translate: 0 -50%;
      border-radius: 999px;
    }
    &::after {
      left: var(--min-value);
    }
    &::before {
      left: var(--max-value);
    }
  }
}
